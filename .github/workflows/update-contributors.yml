name: Update Contributors

on:
  workflow_dispatch:
  pull_request:
    types: [closed]
    branches:
      - dev
      - main

jobs:
  update-contributors:
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get PR author
        if: github.event_name == 'pull_request'
        run: echo "PR_AUTHOR=${{ github.event.pull_request.user.login }}" >> $GITHUB_ENV

      - name: Fetch list of contributors
        run: |
          echo "Fetching contributors from GitHub API..."
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -s https://api.github.com/repos/${{ github.repository }}/contributors \
               > contributors.json

               - name: Update readme.md with contributors
               run: |
                 python3 << 'EOF'
                 import json
                 import os
                 import sys
             
                 readme_filename = "readme.md"
                 start_marker = "<!-- CONTRIBUTORS START -->"
                 end_marker = "<!-- CONTRIBUTORS END -->"
             
                 try:
                     # Get the PR author (if applicable)
                     pr_author = os.getenv("PR_AUTHOR", "").strip()
             
                     # Read the list of contributors obtained from the API
                     with open("contributors.json", "r", encoding="utf-8") as f:
                         contributors = json.load(f)
             
                     # Read the current content of readme.md
                     if os.path.exists(readme_filename):
                         with open(readme_filename, "r", encoding="utf-8") as f:
                             content = f.read()
                     else:
                         content = ""
             
                     # (Optional) Check if the PR author is already in readme.md
                     if pr_author and pr_author in content:
                         print(f"User {pr_author} is already in readme.md. No changes made.")
                         sys.exit(0)
             
                     # Build the HTML table for contributors
                     html_lines = [
                         "<h2>Contributors</h2>",
                         "<table border='1' cellspacing='0' cellpadding='5'>",
                         "  <thead>",
                         "    <tr><th>Avatar</th><th>Username</th><th>Contributions</th></tr>",
                         "  </thead>",
                         "  <tbody>"
                     ]
             
                     for contributor in contributors:
                         if contributor["login"] == pr_author:
                             continue  # Skip the PR author
                         row = (
                             f"    <tr>"
                             f"<td><img src=\"{contributor['avatar_url']}?s=50\" alt=\"Avatar\" width=\"50\" height=\"50\"></td>"
                             f"<td><a href=\"{contributor['html_url']}\">{contributor['login']}</a></td>"
                             f"<td>{contributor['contributions']} contributions</td>"
                             f"</tr>"
                         )
                         html_lines.append(row)
             
                     html_lines.append("  </tbody>")
                     html_lines.append("</table>")
                     new_section = "\n".join(html_lines)
             
                     # If the contributors section already exists, compare it with the new section
                     if start_marker in content and end_marker in content:
                         before, current_section_with_markers = content.split(start_marker, 1)
                         current_section, after = current_section_with_markers.split(end_marker, 1)
                         if new_section.strip() == current_section.strip():
                             print("No changes detected in the contributors list. readme.md will not be updated.")
                             sys.exit(0)
                         updated_content = f"{before}{start_marker}\n{new_section}\n{end_marker}{after}"
                     else:
                         updated_content = f"{content.rstrip()}\n\n{start_marker}\n{new_section}\n{end_marker}\n"
             
                     # Write the updated content to readme.md
                     with open(readme_filename, "w", encoding="utf-8") as f:
                         f.write(updated_content)
             
                     print("readme.md successfully updated with the contributors list.")
             
                 except Exception as e:
                     print(f"Error updating readme.md: {e}", file=sys.stderr)
                     sys.exit(1)
                 EOF

