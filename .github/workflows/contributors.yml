name: Update Contributors

on:
  pull_request:
    types: [closed]
    branches:
      - main
      - dev
  workflow_dispatch:

jobs:
  update-contributors:
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get contributors from GitHub API
        run: |
          echo "Fetching contributors..."
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -s https://api.github.com/repos/${{ github.repository }}/contributors \
            > contributors.json

      - name: Update README.md with contributors list
        run: |
          python3 << 'EOF'
          import json
          import os

          # Ruta del README
          readme_path = "README.md"
          start_marker = "<!-- CONTRIBUTORS START -->"
          end_marker = "<!-- CONTRIBUTORS END -->"

          # Cargar la lista de contribuyentes obtenida de la API
          with open("contributors.json", "r", encoding="utf-8") as f:
              contributors = json.load(f)

          # Construir el contenido Markdown de la sección de contribuyentes
          lines = ["## Contribuyentes", ""]
          for contributor in contributors:
              # Se muestra el nombre de usuario con enlace y la cantidad de contribuciones
              lines.append(f"- [{contributor['login']}]({contributor['html_url']}) - {contributor['contributions']} contribuciones")
          new_section = "\n".join(lines)

          # Leer el contenido actual del README (si existe)
          if os.path.exists(readme_path):
              with open(readme_path, "r", encoding="utf-8") as f:
                  content = f.read()
          else:
              content = ""

          # Actualizar la sección si ya existe; de lo contrario, agregarla al final
          if start_marker in content and end_marker in content:
              before = content.split(start_marker)[0]
              after = content.split(end_marker)[-1]
              updated_content = before + start_marker + "\n" + new_section + "\n" + end_marker + after
          else:
              updated_content = content.rstrip() + "\n\n" + start_marker + "\n" + new_section + "\n" + end_marker + "\n"

          with open(readme_path, "w", encoding="utf-8") as f:
              f.write(updated_content)
          print("README.md updated successfully.")
          EOF

      - name: Commit and push changes if any
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          if ! git diff-index --quiet HEAD; then
            git commit -m "Update contributors list in README.md"
            git push
          else
            echo "No changes to commit."
          fi
