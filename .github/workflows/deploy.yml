name: Deploy to AWS

on:
  pull_request:
    types:
      - closed
    paths:
      - '**/*.js'
      - '**/*.json'
      - '**/*.ts'
    branches:
      - main
      - dev

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Determine environment
        id: set-env
        run: |
          if [[ "${{ github.base_ref }}" == "main" ]]; then
            if [[ -z "${{ secrets.DEPLOY_PATH_PROD }}" ]]; then
              echo "Skipping deployment: DEPLOY_PATH_PROD is not set"
              exit 1
            fi
            echo "ENV=production" >> $GITHUB_ENV
            echo "DEPLOY_PATH=${{ secrets.DEPLOY_PATH_PROD }}" >> $GITHUB_ENV
            echo "PM2_NAME=app" >> $GITHUB_ENV
          elif [[ "${{ github.base_ref }}" == "dev" ]]; then
            if [[ -z "${{ secrets.DEPLOY_PATH_STAGING }}" ]]; then
              echo "Skipping deployment: DEPLOY_PATH_STAGING is not set"
              exit 1
            fi
            echo "ENV=staging" >> $GITHUB_ENV
            echo "DEPLOY_PATH=${{ secrets.DEPLOY_PATH_STAGING }}" >> $GITHUB_ENV
            echo "PM2_NAME=app_staging" >> $GITHUB_ENV
          else
            echo "Skipping deployment: Unrecognized branch"
            exit 1
          fi

      - name: ðŸ“‚ Setting up SSH access
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_SSH_PRIVATE_KEY }}" > ~/.ssh/aws_key.pem
          chmod 400 ~/.ssh/aws_key.pem
          ssh-keyscan -H ${{ secrets.AWS_HOST }} >> ~/.ssh/known_hosts

      - name: ðŸš€ Deploy on AWS
        run: |
          ssh -i ~/.ssh/aws_key.pem ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }} << EOF
            cd $DEPLOY_PATH
            git pull origin ${{ github.base_ref }}
            yarn install
            pm2 restart $PM2_NAME || pm2 start ecosystem.config.js --name "$PM2_NAME"
          EOF
